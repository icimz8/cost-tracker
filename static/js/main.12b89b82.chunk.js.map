{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","Card","classes","children","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"yaAwEeA,EArEK,SAACC,GACnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAyBA,OACE,uBAAMC,SAbc,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAc,CAClBC,MAAOV,EACPW,QAAST,EACTU,KAAM,IAAIC,KAAKT,IAEjBN,EAAMgB,kBAAkBL,GACxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAGf,UACA,sBAAKU,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEC,KAAK,OACLC,MAAOjB,EACPkB,SAhCiB,SAACX,GAC1BN,EAAgBM,EAAMY,OAAOF,aAkCzB,sBAAKF,UAAU,uBAAf,UACE,2CACA,uBACEC,KAAK,SACLI,IAAI,OACJC,KAAK,OACLJ,MAAOf,EACPgB,SAtCkB,SAACX,GAC3BJ,EAAiBI,EAAMY,OAAOF,aAwC1B,sBAAKF,UAAU,uBAAf,UACE,yCACA,uBACEC,KAAK,OACLI,IAAI,aACJE,IAAI,aACJL,MAAOb,EACPc,SA5CgB,SAACX,GACzBF,EAAeE,EAAMY,OAAOF,gBAgD1B,sBAAKF,UAAU,uBAAf,UACE,wBAAQC,KAAK,SAASO,QAASzB,EAAM0B,SAArC,oBACA,wBAAQR,KAAK,SAAb,oCCxCOS,EAtBI,SAAC3B,GAClB,MAAiCC,oBAAS,GAA1C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAeA,OAAO,sBAAKZ,UAAU,cAAf,WACHW,GAAa,wBAAQH,QAPG,WAC1BI,GAAa,IAME,6BACdD,GAAa,cAAC,EAAD,CAAaZ,kBAfE,SAACc,GAC9B,IAAMnB,EAAW,2BACZmB,GADY,IAEfC,GAAIC,KAAKC,SAASC,aAEpBlC,EAAMmC,aAAaxB,IAUmDe,SAL7C,WACzBG,GAAa,UCKFO,G,MAnBQ,SAACpC,GAItB,OACE,qBAAKiB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQE,MAAOnB,EAAMqC,SAAUjB,SAPR,SAACX,GAC5BT,EAAMsC,eAAe7B,EAAMY,OAAOF,QAM9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCVKoB,G,MALF,SAACvC,GACZ,IAAMwC,EAAU,QAAUxC,EAAMiB,UAChC,OAAO,qBAAKA,UAAWuB,EAAhB,SAA0BxC,EAAMyC,aCW1BC,G,YAbI,SAAC1C,GAClB,IAAM2C,EAAQ3C,EAAMc,KAAK8B,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAO7C,EAAMc,KAAKgC,cAClBC,EAAM/C,EAAMc,KAAK8B,eAAe,QAAS,CAAEG,IAAK,YACtD,OACE,sBAAK9B,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsC0B,IACtC,qBAAK1B,UAAU,qBAAf,SAAqC4B,IACrC,qBAAK5B,UAAU,oBAAf,SAAoC8B,SCgB3BC,G,MApBI,SAAChD,GAClB,MAA0BC,mBAASD,EAAMY,OAAzC,mBAAOA,EAAP,UAKA,OACC,6BACG,eAAC,EAAD,CAAMK,UAAU,eAAhB,UACA,cAAC,EAAD,CAAaH,KAAMd,EAAMc,OACzB,sBAAKG,UAAU,4BAAf,UACE,6BAAKL,IACL,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,oBCOtCoC,EAnBM,SAACjD,GACpB,OAA2B,IAAvBA,EAAMkD,MAAMC,OACP,oBAAIlC,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGjB,EAAMkD,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEzC,MAAOyC,EAAQzC,MACfC,OAAQwC,EAAQxC,OAChBC,KAAMuC,EAAQvC,MAHTuC,EAAQtB,U,OCGRuB,G,YAfE,SAACtD,GAChB,IAAIuD,EAAgB,KAIlB,OAHEvD,EAAMwD,SAAW,IACnBD,EAAgBvB,KAAKyB,MAAOzD,EAAMmB,MAAOnB,EAAMwD,SAAW,KAAO,KAG/D,sBAAKvC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkByC,MAAO,CAACC,OAAQJ,OAEnD,qBAAKtC,UAAU,mBAAf,SAAmCjB,EAAM4D,aCQlCC,EAjBD,SAAC7D,GACb,IAAM8D,EAAkB9D,EAAM+D,WAAWX,KAAI,SAAAY,GAAS,OAAIA,EAAU7C,SAC9D8C,EAAejC,KAAKR,IAAL,MAAAQ,KAAI,YAAQ8B,IACjC,OACE,qBAAK7C,UAAU,QAAf,SACGjB,EAAM+D,WAAWX,KAAI,SAACY,GAAD,OACpB,cAAC,EAAD,CAEE7C,MAAO6C,EAAU7C,MACjBqC,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,aCcVM,EAvBO,SAAClE,GACrB,IAD+B,EACzBmE,EAAkB,CACtB,CAAEP,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,GACvB,CAAEyC,MAAO,MAAOzC,MAAO,IAZM,cAeTnB,EAAMoE,UAfG,IAe/B,IAAI,EAAJ,qBAAqC,CAAC,IAA3Bf,EAA0B,QAEnCc,EADqBd,EAAQvC,KAAKuD,YACJlD,OAASkC,EAAQxC,QAjBlB,8BAoB/B,OAAO,cAAC,EAAD,CAAOkD,WAAYI,KCSbG,G,MAtBE,SAACtE,GAChB,MAAwCC,mBAAS,QAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KAIMC,EAAmBzE,EAAMkD,MAAMwB,QAAO,SAACrB,GAE3C,OAAOA,EAAQvC,KAAKgC,cAAcZ,aAAeqC,KAGnD,OACE,eAAC,EAAD,CAAMtD,UAAU,WAAhB,UACE,cAAC,EAAD,CACEoB,SAAUkC,EACVjC,eAZsB,SAACqC,GAC3BH,EAAgBG,MAad,cAAC,EAAD,CAAeP,SAAUK,IACzB,cAAC,EAAD,CAAcvB,MAAOuB,SCrBrBG,EAAiB,CACrB,CACE7C,GAAI,KACJnB,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEgB,GAAI,KAAMnB,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KACrE,CACEgB,GAAI,KACJnB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAI,KACJnB,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MA0Bb8D,EAtBH,WACV,MAAgC5E,mBAAS2E,GAAzC,mBAAOR,EAAP,KAAiBU,EAAjB,KAaA,OACE,gCACE,cAAC,EAAD,CAAY3C,aAdU,SAACiC,GACzBU,GAAY,SAACC,GACX,MAAM,CAAEX,GAAR,mBAAqBW,UAarB,cAAC,EAAD,CAAU7B,MAAOkB,QCtCvBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.12b89b82.chunk.js","sourcesContent":["import react, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  \r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n    <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add New Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React ,{useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing]= useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  }\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  }\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  }\r\n  return <div className=\"new-expense\">\r\n    {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n    {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n  </div>\r\n};\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler =(event) =>{\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './Card.css';\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css'\r\nconst ExpenseDate =(props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\nimport React, { useState } from 'react';\r\n\r\nconst ExpenseItem =(props) => {\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  // const clickHandler = () => {\r\n  //   setTitle('Updated!');\r\n  // }\r\n  return (\r\n   <li>\r\n      <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n      {/* <button onClick={clickHandler}>Change Title</button> */}\r\n    </Card>\r\n   </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import react from 'react';\r\n\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n  if (props.maxValue > 0){\r\n    barFillHeight = Math.round((props.value /props.maxValue) *100) + '%';\r\n  }\r\n    return (\r\n      <div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n          <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\r\n        </div>\r\n        <div className='chart-bar__label'>{props.label}</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for( const expense of props.expenses){\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport Card from '../UI/Card';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    // console.log(expense.date.getFullYear());\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className='expenses'>\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expenses) => {\n    setExpenses((prevExpenses) => {\n      return [expenses, ...prevExpenses];\n    });\n  };\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}